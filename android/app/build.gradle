apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"

react {
    // Customize as needed
    // root = file("../")
    // reactNativeDir = file("../node_modules/react-native")
    // codegenDir = file("../node_modules/@react-native/codegen")
    // cliFile = file("../node_modules/react-native/cli.js")

    // debuggableVariants = ["liteDebug", "prodDebug"]

    // Uncomment for custom bundling configurations
    // nodeExecutableAndArgs = ["node"]
    // bundleCommand = "ram-bundle"
    // bundleConfig = file(../rn-cli.config.js)
    // bundleAssetName = "MyApplication.android.bundle"
    // entryFile = file("../js/MyApplication.android.js")
    // extraPackagerArgs = []

    // Uncomment for custom Hermes commands
    // hermesCommand = "$rootDir/my-custom-hermesc/bin/hermesc"
    // hermesFlags = ["-O", "-output-source-map"]
}

def enableProguardInReleaseBuilds = true // Enable ProGuard to reduce APK size
def jscFlavor = 'org.webkit:android-jsc-intl:+' // Use the intl variant for locale support

android {
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion

    namespace "com.reactnativenavigations"
    defaultConfig {
        applicationId "com.reactnativenavigations"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.1"
        // ndk {
        //     abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
        // }
    }
    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            // Set up your release key for production
            signingConfig signingConfigs.debug // Replace with release signing config
            minifyEnabled enableProguardInReleaseBuilds
            shrinkResources true // Remove unused resources
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
    }
    splits {
        abi {
            enable true
            reset()
            include 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
            universalApk false // Generates separate APKs per ABI
        }
    }
}

dependencies {
    implementation("com.facebook.react:react-android")

    // Use Hermes for better performance and smaller APK size
    implementation("com.facebook.react:hermes-android")
    // Uncomment the following if Hermes is not enabled
    // implementation jscFlavor
}

apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesAppBuildGradle(project)
